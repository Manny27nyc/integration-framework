{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://launchdarkly.com/schemas/v1.0/integrations",
    "title": "LaunchDarkly Integrations Manifest",
    "description": "Describes the capabilities and intent of a LaunchDarkly integration",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "name": {
            "$id": "#/properties/name",
            "title": "Integration name",
            "description": "Your integration's name. No spaces",
            "minLength": 3,
            "maxLength": 50,
            "type": "string",
            "pattern": "^\\S*$"
        },
        "version": {
            "$id": "#/properties/version",
            "title": "Version",
            "description": "A semantic version of the integration. See https://semver.org for more info.",
            "examples": [
                "0.0.1",
                "1.0.0",
                "1.0.1-beta"
            ],
            "type": "string",
            "minLength": 5,
            "maxLength": 14,
            "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
        },
        "overview": {
            "$id": "#/properties/overview",
            "title": "Short description",
            "description": "A short-one liner describing your integration",
            "type": "string",
            "minLength": 10,
            "maxLength": 100,
            "pattern": "^(.*)$"
        },
        "description": {
            "$id": "#/properties/description",
            "title": "Long description",
            "description": "A longer description of your integration",
            "type": "string",
            "minLength": 50,
            "maxLength": 2048,
            "pattern": "^(.*)$"
        },
        "author": {
            "$id": "#/properties/author",
            "title": "Author",
            "description": "Name of the author or organization responsible for the integration",
            "type": "string",
            "minLength": 3,
            "maxLength": 100,
            "pattern": "^(.*)$"
        },
        "links": {
            "$id": "#/properties/links",
            "title": "Links",
            "description": "A set of reference links supporting your integration",
            "type": "object",
            "properties": {
                "site": {
                    "$id": "#/properties/links/site",
                    "title": "Website",
                    "description": "URL to your website",
                    "type": "string",
                    "maxLength": 2048,
                    "pattern": "^[Hh][Tt][Tt][Pp][Ss]?://"
                },
                "privacyPolicy": {
                    "$id": "#/properties/links/privacy-policy",
                    "title": "Privacy Policy",
                    "description": "URL to your organization's privacy policy",
                    "type": "string",
                    "maxLength": 2048,
                    "pattern": "^[Hh][Tt][Tt][Pp][Ss]?://"
                },
                "supportEmail": {
                    "$id": "#/properties/links/support-email",
                    "title": "Support Email",
                    "description": "Email address for your integration's support",
                    "type": "string",
                    "format": "email"
                },
                "supportWebsite": {
                    "$id": "#/properties/links/support-website",
                    "title": "Support Website",
                    "description": "URL to your integration's support website",
                    "type": "string",
                    "maxLength": 2048,
                    "pattern": "^[Hh][Tt][Tt][Pp][Ss]?://"
                }
            },
            "required": [
                "site",
                "privacyPolicy",
                "supportEmail"
            ]
        },
        "categories": {
            "$id": "#/properties/categories",
            "title": "Categories",
            "description": "Categories that describe your integration",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "maxItems": 3,
            "items": {
                "type": "string",
                "enum": [
                    "alerts",
                    "analytics-and-reporting",
                    "apm",
                    "automation",
                    "communication-and-collaboration",
                    "config-and-deployment",
                    "exceptions",
                    "experimentation",
                    "hr-and-operations",
                    "issue-tracking",
                    "it-and-project-management",
                    "marketing-and-social-media",
                    "monitoring",
                    "orchestration",
                    "product-and-design",
                    "provisioning",
                    "security",
                    "source-control"
                ]
            }
        },
        "icons": {
            "$id": "#/properties/icons",
            "title": "Icons",
            "description": "Logos describing your integration in SVG format",
            "type": "object",
            "properties": {
                "square": {
                    "$id": "#/properties/icons/square",
                    "title": "Square logo",
                    "description": "A square version of your integration's logo in SVG format",
                    "type": "string",
                    "pattern": "\\.svg$"
                },
                "rectangular": {
                    "$id": "#/properties/icons/rectangular",
                    "title": "Rectangular logo",
                    "description": "A rectangular version of your integration's logo in SVG format",
                    "type": "string",
                    "pattern": "\\.svg$"
                }
            },
            "required": [
                "square",
                "rectangular"
            ]
        },
        "authentication": {
            "$id": "#/properties/authentication",
            "title": "Authentication",
            "description": "Specify the authentication method required by your integration",
            "type": "object",
            "properties": {
                "type": {
                    "$id": "#/properties/authentication/type",
                    "title": "Auth Type",
                    "description": "Specify the authentication method required by your integration",
                    "type": "string",
                    "enum": [
                        "token"
                    ]
                },
                "label": {
                    "$id": "#/properties/authentication/label",
                    "title": "Token",
                    "description": "Label to use in the LaunchDarkly UI describing you token",
                    "examples": [
                        "API key",
                        "API token"
                    ],
                    "type": "string"
                },
                "hint": {
                    "$id": "#/properties/authentication/hint",
                    "title": "Hint",
                    "description": "A placeholder hint used in the LaunchDarkly UI describing your token",
                    "examples": [
                        "Enter API key from your SpaceXYZ account"
                    ],
                    "type": "string"
                },
                "acceptedAs": {
                    "$id": "#/properties/authentication/acceptedAs",
                    "title": "Token accepted as...",
                    "description": "Specify how your token should be provided in the request to your service",
                    "type": "object",
                    "properties": {
                        "type": {
                            "$id": "#/properties/authentication/acceptedAs/type",
                            "title": "Type",
                            "description": "Specify the method in which your token is provided in the request. In most cases, tokens are either passed through query parameter or a header.",
                            "type": "string",
                            "enum": [
                                "query-param",
                                "header"
                            ]
                        },
                        "name": {
                            "$id": "#/properties/authentication/acceptedAs/type/param-name",
                            "title": "Query parameter or header name",
                            "description": "Specify the name of the query parameter or header you'd like to use",
                            "type": "string",
                            "examples": [
                                "token",
                                "key",
                                "X-App-Token"
                            ]
                        },
                        "prefix": {
                            "$id": "#/properties/authentication/acceptedAs/type/header-value-prefix",
                            "title": "Header value prefix",
                            "description": "If your token needs to be padded with a prefix, specify it here",
                            "type": "string",
                            "examples": [
                                "Bearer "
                            ]
                        }
                    },
                    "required": [
                        "type",
                        "name"
                    ],
                    "propertyNames": {
                        "enum": [
                            "type",
                            "name",
                            "prefix"
                        ]
                    }
                }
            },
            "required": [
                "type",
                "label",
                "hint",
                "acceptedAs"
            ],
            "propertyNames": {
                "enum": [
                    "type",
                    "label",
                    "hint",
                    "acceptedAs"
                ]
            }
        },
        "capabilities": {
            "$id": "#/properties/capabilities",
            "title": "Capabilities",
            "description": "Specify which capabilities you'd like your integration to have",
            "type": "object",
            "properties": {
                "auditLogEventsHook": {
                    "$id": "#/properties/capability/audit-log-events-hook",
                    "title": "Audit Log Events Hook",
                    "description": "This capability will enable LaunchDarkly to send audit log event webhooks to your endpoint.",
                    "type": "object",
                    "propertyNames": {
                        "enum": [
                            "receivingEndpoint",
                            "method",
                            "contentType",
                            "templates",
                            "defaultPolicy"
                        ]
                    },
                    "properties": {
                        "receivingEndpoint": {
                            "$id": "#/properties/capability/audit-log-events-hook/receiving-endpoint",
                            "title": "Endpoint URL",
                            "description": "URL where you'd like LaunchDarkly to send webhooks to",
                            "type": "string",
                            "maxLength": 2048,
                            "pattern": "^[Hh][Tt][Tt][Pp][Ss]?://"
                        },
                        "method": {
                            "$id": "#/properties/capability/audit-log-events-hook/method",
                            "title": "HTTP method",
                            "description": "HTTP method to use when LaunchDarkly makes the request to your endpoint",
                            "enum": [
                                "post",
                                "put",
                                "patch"
                            ]
                        },
                        "contentType": {
                            "$id": "#/properties/capability/audit-log-events-hook/content-type",
                            "title": "Content type",
                            "description": "The content-type your endpoint expects to receive",
                            "type": "string",
                            "default": "application/json",
                            "minLength": 3,
                            "examples": [
                                "application/json",
                                "application/xml"
                            ]
                        },
                        "templates": {
                            "$id": "#/properties/capability/audit-log-events-hook/templates",
                            "title": "Webhook body template",
                            "description": "Templates to use for body of the webhook request",
                            "type": "object",
                            "properties": {
                                "flag": {
                                    "$id": "#/properties/capability/audit-log-events-hook/templates/flag",
                                    "title": "Flag template",
                                    "description": "Template to use for flag events",
                                    "type": "string"
                                },
                                "project": {
                                    "$id": "#/properties/capability/audit-log-events-hook/templates/project",
                                    "title": "Project template",
                                    "description": "Template to use for project events",
                                    "type": "string"
                                },
                                "environment": {
                                    "$id": "#/properties/capability/audit-log-events-hook/templates/environment",
                                    "title": "Environment template",
                                    "description": "Template to use for environment events",
                                    "type": "string"
                                },
                                "metric": {
                                    "$id": "#/properties/capability/audit-log-events-hook/templates/metric",
                                    "title": "Metric template",
                                    "description": "Template to use for metric events",
                                    "type": "string"
                                }
                            }
                        },
                        "defaultPolicy": {
                            "$id": "#/properties/capability/audit-log-events-hook/default-policy",
                            "title": "Default Policy",
                            "description": "LaunchDarkly policy that allows you to filter events sent to your webhook. See https://docs.launchdarkly.com/docs/policies-in-custom-roles for more information.",
                            "type": "array",
                            "items": {
                                "$id": "#/properties/capability/audit-log-events-hook/policy",
                                "title": "Policy",
                                "description": "A LaunchDarkly policy. See https://docs.launchdarkly.com/docs/policies-in-custom-roles for more information.",
                                "type": "object",
                                "propertyNames": {
                                    "enum": [
                                        "actions",
                                        "effect",
                                        "notActions",
                                        "notResources",
                                        "resources"
                                    ]
                                },
                                "properties": {
                                    "actions": {
                                        "$id": "#/properties/capability/audit-log-events-hook/policy/actions",
                                        "title": "Actions",
                                        "description": "A list of action specifiers defining the actions to which the statement applies. See https://docs.launchdarkly.com/docs/actions-in-custom-roles for more information.",
                                        "default": [
                                            "*"
                                        ],
                                        "examples": [
                                            "updateOn",
                                            "createFlag",
                                            "updateRules",
                                            "updateTargets"
                                        ],
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "effect": {
                                        "$id": "#/properties/capability/audit-log-events-hook/policy/effect",
                                        "title": "Effect",
                                        "description": "This attribute defines whether the statement allows or denies access to the named resources and actions.",
                                        "default": "allow",
                                        "type": "string",
                                        "enum": [
                                            "allow",
                                            "deny"
                                        ]
                                    },
                                    "notActions": {
                                        "$id": "#/properties/capability/audit-log-events-hook/policy/not-actions",
                                        "title": "Not actions",
                                        "description": "A list of action specifiers defining the actions to which the statement does not apply. See https://docs.launchdarkly.com/docs/actions-in-custom-roles for more information.",
                                        "default": [
                                            "*"
                                        ],
                                        "examples": [
                                            "createFlag",
                                            "deleteFlag",
                                            "cloneFlag"
                                        ],
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "notResources": {
                                        "$id": "#/properties/capability/audit-log-events-hook/policy/not-resources",
                                        "title": "Not resources",
                                        "description": "A list of resource specifiers defining the resources to which the statement does not apply. See https://docs.launchdarkly.com/docs/resources-in-custom-roles for more information.",
                                        "default": [
                                            "*"
                                        ],
                                        "examples": [
                                            "proj/*:env/production:flag/*"
                                        ],
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "resources": {
                                        "$id": "#/properties/capability/audit-log-events-hook/policy/resources",
                                        "title": "Resources",
                                        "description": "A list of resource specifiers defining the resources to which the statement applies. See https://docs.launchdarkly.com/docs/resources-in-custom-roles for more information.",
                                        "default": [
                                            "*"
                                        ],
                                        "examples": [
                                            "proj/*:env/production:flag/*"
                                        ],
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": [
                        "receivingEndpoint",
                        "method",
                        "contentType"
                    ]
                }
            },
            "minProperties": 1
        }
    },
    "required": [
        "name",
        "version",
        "overview",
        "description",
        "author",
        "links",
        "categories",
        "icons",
        "capabilities"
    ]
}